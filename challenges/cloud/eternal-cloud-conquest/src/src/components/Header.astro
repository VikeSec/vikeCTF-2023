---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import { authorizeUser } from "@utils/auth";

export interface Props {
  activeNav?: "posts" | "about" | "search";
}

const { activeNav } = Astro.props;

const user_data = await authorizeUser(Astro.cookies.get("Authorization").value);
const has_auth_cookie = user_data !== null;
const has_img_url = has_auth_cookie && user_data.img !== "";
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={LOGO_IMAGE.svg}
              alt="AstroPaper Logo"
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <div class="icon-container flex">
            <div id="first-line"></div>
            <div id="second-line"></div>
            <div id="third-line"></div>
          </div>
        </button>
        <ul id="menu-items" class="display-none sm:flex">
          <li>
            <a href="/posts" class={activeNav === "posts" ? "active" : ""}>
              Posts
            </a>
          </li>
          <li>
            <a href="/about" class={activeNav === "about" ? "active" : ""}>
              About
            </a>
          </li>
          <li>
            <LinkButton
              href="/search"
              className={`focus-outline p-3 sm:p-1 ${
                activeNav === "search" ? "active" : ""
              }`}
              ariaLabel="search"
              title="Search"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="scale-125 sm:scale-100"
                ><path
                  d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
                ></path>
              </svg>
            </LinkButton>
          </li>
          <li>
            {
              has_img_url ? (
                <a href="/profile">
                  <button>
                    <img
                      class="h-4 w-4 object-scale-down object-center"
                      src={user_data.img}
                    />
                  </button>
                </a>
              ) : (
                <a href="/register">
                  <button>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                      <path d="M12 11a5 5 0 1 0-5-5 5 5 0 0 0 5 5Zm0-8a3 3 0 1 1-3 3 3 3 0 0 1 3-3ZM4 23h16a1 1 0 0 0 1-1v-4a5 5 0 0 0-5-5H8a5 5 0 0 0-5 5v4a1 1 0 0 0 1 1Zm1-5a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v3H5Z" />
                    </svg>
                  </button>
                </a>
              )
            }
          </li>
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  #skip-to-content {
    @apply bg-skin-accent text-skin-inverted absolute -top-full left-16 z-50 py-2 px-3 transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
  }
  .logo {
    @apply absolute py-1 text-xl font-semibold sm:static sm:text-2xl;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden;
  }
  .hamburger-menu svg {
    @apply fill-skin-base h-6 w-6 scale-125;
  }

  nav {
    @apply bg-skin-fill flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-y-2 gap-x-2 sm:mt-0 sm:ml-0 sm:w-auto sm:gap-y-0 sm:gap-x-5;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply hover:text-skin-accent w-full px-4 py-3 text-center font-medium sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-child(4) a {
    @apply w-auto;
  }
  nav ul li:nth-child(4),
  nav ul li:nth-child(5) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply fill-skin-base hover:fill-skin-accent h-6 w-6;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .icon-container {
    @apply h-5 w-6 flex-col items-end justify-between;
  }
  .icon-container div {
    @apply bg-skin-inverted h-0.5 transition-all;
  }
  #first-line {
    @apply w-full;
  }
  #second-line {
    @apply w-3/4;
  }
  #third-line {
    @apply w-1/2;
  }
</style>

<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuItems = document.querySelector("#menu-items")?.classList;

  const iconContainer = document.querySelector(".icon-container")?.classList;
  const firstLine = document.querySelector("#first-line")?.classList;
  const secondLine = document.querySelector("#second-line ")?.classList;
  const thirdLine = document.querySelector("#third-line")?.classList;

  menuBtn?.addEventListener("click", function () {
    const menuExpanded = menuBtn?.getAttribute("aria-expanded");
    if (menuExpanded === "false") {
      menuBtn?.setAttribute("aria-expanded", "true");
      menuBtn?.setAttribute("aria-label", "Close Menu");
      menuItems?.remove("display-none");

      // icon animation
      iconContainer?.remove("flex");
      iconContainer?.add("relative");
      firstLine?.add("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.add("display-none");
      secondLine?.add("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    } else {
      menuBtn?.setAttribute("aria-expanded", "false");
      menuBtn?.setAttribute("aria-label", "Open Menu");
      menuItems?.add("display-none");

      // icon animation
      iconContainer?.add("flex");
      iconContainer?.remove("relative");
      firstLine?.remove("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.remove("display-none");
      secondLine?.remove("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    }
  });
</script>
